/* 
 * CyberSource Flex API
 *
 * Simple PAN tokenization service
 *
 * OpenAPI spec version: 0.0.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using CyberSource.Api;
using NUnit.Framework;

namespace CyberSource.Test.Api
{
    /// <summary>
    ///  Class for testing InstrumentIdentifierApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class InstrumentIdentifierApiTests
    {
        private InstrumentIdentifierApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new InstrumentIdentifierApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of InstrumentIdentifierApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' InstrumentIdentifierApi
            //Assert.IsInstanceOfType(typeof(InstrumentIdentifierApi), instance, "instance is a InstrumentIdentifierApi");
        }

        
        /// <summary>
        /// Test TmsV1InstrumentidentifiersTokenIdDelete
        /// </summary>
        [Test]
        public void TmsV1InstrumentidentifiersTokenIdDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string profileId = null;
            //string tokenId = null;
            //instance.TmsV1InstrumentidentifiersTokenIdDelete(profileId, tokenId);
            
        }
        
        /// <summary>
        /// Test TmsV1InstrumentidentifiersTokenIdGet
        /// </summary>
        [Test]
        public void TmsV1InstrumentidentifiersTokenIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string profileId = null;
            //string tokenId = null;
            //var response = instance.TmsV1InstrumentidentifiersTokenIdGet(profileId, tokenId);
            //Assert.IsInstanceOf<TmsV1InstrumentidentifiersPost200Response> (response, "response is TmsV1InstrumentidentifiersPost200Response");
        }
        
        /// <summary>
        /// Test TmsV1InstrumentidentifiersTokenIdPatch
        /// </summary>
        [Test]
        public void TmsV1InstrumentidentifiersTokenIdPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string profileId = null;
            //string tokenId = null;
            //Body1 body = null;
            //var response = instance.TmsV1InstrumentidentifiersTokenIdPatch(profileId, tokenId, body);
            //Assert.IsInstanceOf<TmsV1InstrumentidentifiersPost200Response> (response, "response is TmsV1InstrumentidentifiersPost200Response");
        }
        
    }

}
